{
    "uuid": [
        {
            "value": "df18079f-a9bd-4528-98c8-736333c85958"
        }
    ],
    "langcode": [
        {
            "value": "en"
        }
    ],
    "type": [
        {
            "target_id": "blog",
            "target_type": "node_type",
            "target_uuid": "5e1cc3ac-5c8f-4194-a7db-a96757398273"
        }
    ],
    "revision_timestamp": [
        {
            "value": "2025-02-28T17:30:52+00:00"
        }
    ],
    "revision_uid": [
        {
            "target_type": "user",
            "target_uuid": "94f18ca1-24cf-4db9-8dc7-6771e8d09443"
        }
    ],
    "revision_log": [],
    "status": [
        {
            "value": true
        }
    ],
    "uid": [
        {
            "target_type": "user",
            "target_uuid": "94f18ca1-24cf-4db9-8dc7-6771e8d09443"
        }
    ],
    "title": [
        {
            "value": "Drupal CMS Modules I Had Not Used Before"
        }
    ],
    "created": [
        {
            "value": "2025-02-27T01:01:37+00:00"
        }
    ],
    "changed": [
        {
            "value": "2025-02-28T17:30:52+00:00"
        }
    ],
    "promote": [
        {
            "value": true
        }
    ],
    "sticky": [
        {
            "value": false
        }
    ],
    "default_langcode": [
        {
            "value": true
        }
    ],
    "revision_translation_affected": [
        {
            "value": true
        }
    ],
    "path": [
        {
            "alias": "\/blog\/2025-02\/drupal-cms-modules-i-had-not-used",
            "langcode": "en"
        }
    ],
    "body": [
        {
            "value": "<p>Drupal CMS is packed with surprises. This post will cover a few of those as part of a series of posts on the new release of Drupal that is drastically changing the way we use Drupal to create websites.<\/p><p>I can't remember when I started using Drupal. I know I created an account on Drupal.org in September of 2005, so I had to have at least installed it and played around a bit at that time. Fun fact that first account was <a href=\"https:\/\/www.drupal.org\/u\/mobilehippie\">mobilehippie<\/a>, all my contributions since 2009 are under the username <a href=\"https:\/\/www.drupal.org\/u\/joshuami\">joshuami<\/a>.<\/p><p>Around 2007 or 2008, I launched the first website that I can say I completed using Drupal\u2014long enough to have forgotten precisely which site (maybe Hitachi?). That first site started as Drupal 5, but as Drupal 6 was released in February 2008, I'm pretty sure it launched on D6.&nbsp;<\/p><p>Over the years, I installed so... many... modules.&nbsp;<\/p><p>Despite having tried so many modules to meet a wide range of project needs, I occasionally get surprised on <a href=\"https:\/\/talkingdrupal.com\/\">Talking Drupal<\/a> when they cover a <a href=\"https:\/\/talkingdrupal.com\/module-of-the-week\">module of the week<\/a>. What I didn't expect was to be surprised by modules included in <a href=\"https:\/\/www.drupal.org\/project\/cms\">Drupal CMS<\/a>.<\/p><p>Some of these should not have been a surprise. How did I not know about Simple Add More or Token OR?!<\/p><h2>AI (and Friends)<\/h2><p>I have been a little skeptical of AI needing to be in every new software release. Yes, AI has a place, but it feels gimmicky in so many applications. When I first heard that Drupal CMS would have AI, I was skeptical. When I saw the demos of AI in Drupal CMS as part of DrupalCon Barcelona, I was intrigued. Now that I see everything that is possible with the 21 modules of AI included in Drupal CMS, I'm excited. (It might be more accurate to say 5 modules with a <a href=\"https:\/\/www.drupal.org\/project\/ai\">suite of submodules<\/a>.)<\/p><p>Drupal CMS ships with two AI providers, Anthropic and OpenAI, and their library of models. Configuration of an AI provider is straightforward and relatively quick to get up and running.<\/p><p>With tools like the AI CKEditor Integration, editors will be able to prompt their way through content creation, which could allow writing that meets particular tone or verbosity requirements. Think of it as spelling and grammar checks combined with content generation.<\/p><p>Similarly, <a href=\"https:\/\/www.drupal.org\/project\/ai_image_alt_text\">on demand image alternative text creation<\/a> could lead to more accessible content. (<a href=\"https:\/\/dri.es\/trusting-ai-with-my-images-was-not-easy\">Dries has even suggested these models can do a better job than a human in some cases<\/a>.)<\/p><p>As someone that has worked on quite a few websites that needed enterprise-grade translation, AI Translate could be an interesting alternative to translation APIs that allows for on demand and bulk translation with the added capability of an AI agent to set tone per language and region as well as a more dynamic approach to translation libraries to improve translation quality.&nbsp;<\/p><p>Similarly, AI Search could be an alternative to search solutions like Solr, Elastisearch, and Angolia with possible improvements to natural language search.<\/p><p>The AI Chatbot demos are impressive. The idea that a site builder could prompt their way to complex content models is compelling. \"Give me a book content type with fields for ISBN and year published.\" That could save on a huge amount of typing.<\/p><p>Automation could also lead to interesting new content workflows. What if you could set up a workflow that automatically reviewed content with an AI agent at the point it reached a particular moderation state? With ECA (see below) and AI, that's possible.<\/p><h2>ECA (and Friends)<\/h2><p><a href=\"https:\/\/www.drupal.org\/project\/eca\">ECA<\/a> stands for event condition action. It is powerful.<\/p><p>One way to think of ECA is as a drop in replacement for <a href=\"https:\/\/www.drupal.org\/project\/rules\">Rules<\/a> that has a more robust visual modeler to allow you to see the rules you are creating more easily.<\/p><p>While ECA had been on my list to try since DrupalCon Portland when I saw a convincing demo of its capability, seeing the example models included in Drupal CMS prodded me to create my own.<\/p><p>I've since created a model to notify assigned reviewers by email when changes occur to content as well as a rule to assign group memberships (using the <a href=\"https:\/\/www.drupal.org\/project\/group\">Group module<\/a>) based on user profile data.&nbsp;<\/p><drupal-media data-entity-type=\"media\" data-entity-uuid=\"26c82bbd-1599-49a8-ab18-607cdd5d9afb\" data-view-mode=\"large\">&nbsp;<\/drupal-media><p>The possibilities are endless and every model created tends to be one less module needed. No need for <a href=\"https:\/\/www.drupal.org\/project\/quick_node_clone\">Quick Node Clone<\/a> when you can just write an ECA model for it.<\/p><h2>Simple Add More<\/h2><p>I feel like I should have know about about <a href=\"https:\/\/www.drupal.org\/project\/sam\">Simple Add More<\/a>. It's been around three years now!<\/p><p>Drupal's field system allows you to set the cardinality to restrict the number of items that can be added to a particular field. So if you have a reviewer field (entity referenced users), and you want to restrict it to no more than three reviewers, the resulting field will show three inputs. Simple Add More simplifies that form display to only show one input with an \"add more\" button and help text that explains the limit.<\/p><p>The resulting form display is so much cleaner. <a href=\"https:\/\/www.drupal.org\/project\/drupal\/issues\/1156338\">This user experience improvement is close to making its way into core<\/a>, but until it does, this module is a must.<\/p><h2>Easy Email, Symfony Mailer Lite, and Mail System<\/h2><drupal-media data-entity-type=\"media\" data-entity-uuid=\"dd50de06-7fa3-4177-807a-c6a96c75fc75\" data-view-mode=\"small\" data-align=\"right\">&nbsp;<\/drupal-media><p>The name <a href=\"https:\/\/www.drupal.org\/project\/easy_email\">Easy Email<\/a> is misleading. Nothing is easy about settings up email on a new Drupal site. (Though props to <a href=\"https:\/\/www.drupal.org\/u\/zengenuity\">Wayne Eaker<\/a> for his excellent documentation and demos.)&nbsp;<\/p><p>To get email working on a typical site, you have configure <a href=\"https:\/\/www.drupal.org\/project\/mailsystem\">Mail System<\/a> to use a library like <a href=\"https:\/\/www.drupal.org\/project\/symfony_mailer_lite\">Symfony Mailer Lite<\/a> or <a href=\"https:\/\/www.drupal.org\/project\/smtp\">SMTP Authentication Support<\/a> to send email that gets formatted by something like Easy Email or <a href=\"https:\/\/www.drupal.org\/project\/mimemail\">Mime Mail<\/a>.<\/p><p>Trust me when I say that configuring all of that is seldom \"easy\".<\/p><p>That said, I think the fact that Easy Email is included in Drupal CMS is going to lead to it being a more commonly used solution. As more people use it, this flexible interface is likely to get the user experience attention that will improve configuring these complex systems.<\/p><p><strong>Update<\/strong>: Wayne mentioned in Slack that the easiest way to get up and running with Easy Email on an existing site is to use the <code>easy_email_express<\/code> recipe. When applied, you'll have all the settings you need to send the email using the PHP native sendmail binary. You'll still need to adjust some PHP settings, but for testing email it is a good way to get up and running. (I could do an entire post on making sure you set up email for successful delivery, which is a bit more complex as it involves configuring your mail server with proper SPF (Sender Policy Framework) and DKIM (DomainKeys Identified Mail) settings.<\/p><h2>Token OR<\/h2><p><a href=\"https:\/\/www.drupal.org\/project\/token_or\">Token OR<\/a> is never going to be read correctly by a screen reader. The capitalized \"OR\" is referencing the way this simple module allows you to include alternate tokens in a this \"or\" that pattern.<\/p><p>So if I wanted to have a metatag description that used a <code>field_seo_description<\/code> if it exists but otherwise falls back to <code>field_description<\/code>, it would look something like this:<\/p><pre><code class=\"language-plaintext\">[node:field_seo_description|node:field_description]<\/code><\/pre><p>That little pipe (<code>|<\/code>) is standing in for \"or\" in this case.<\/p><h2>Trash<\/h2><p>Operating systems have long used the idea of trash cans (or recycling bins) as a way of representing data that has been removed but not yet deleted. <a href=\"https:\/\/www.drupal.org\/project\/trash\">Trash<\/a> let's editors \"throw away\" content that is no longer needed, but saves it in a state that allows it to be recovered if it was thrown away be default.<\/p><h2>Simple Search Form<\/h2><p><a href=\"https:\/\/www.drupal.org\/project\/simple_search_form\">Simple Search Form<\/a> is another module that I'm suprised I have not run across. Typically, I either expose the search form for a view or write a custom search form into a block. This module gives you a block with a search input and button that can point to any search view. So even if your search view has multiple filters, you search block that is part of your navigation bar can be simple and straightforward.<\/p><h2>Klaro Cookie &amp; Consent Management<\/h2><p><a href=\"https:\/\/www.drupal.org\/project\/klaro\">Klaro Cookie &amp; Consent Management<\/a> provides a user interface for expressing privacy preferences. Consent management is a must have for websites that fall under the <a href=\"https:\/\/gdpr-info.eu\/\">GDPR<\/a>. &nbsp;I found it interesting that this particular module has a supporting product behind it's development, <a href=\"https:\/\/klaro.org\/\">Klaro<\/a>. It's unfortunate that the name of the company is phonetically the same as the default admin theme in Drupal, Claro.&nbsp;<\/p><h2>Themes: Gin and Drupal CMS Olivero<\/h2><drupal-media data-entity-type=\"media\" data-entity-uuid=\"030ab38b-01e5-43d8-8289-ecdf631d7271\" data-view-mode=\"small\" data-align=\"right\">&nbsp;<\/drupal-media><p>Technically, I have installed <a href=\"https:\/\/www.drupal.org\/project\/gin\">Gin<\/a> before, but until it was part of the Drupal CMS release, I never felt comfortable using it on a customer project. I'm a fan of most of the visual enhancements it adds over and above Claro, the default admin theme that is part of Drupal core. (I'm writing this with dark mode and some choice color accents. How fun!)&nbsp;<\/p><p>I've run into a couple of issues with Gin and common modules like Environment Indicator, but overall, it works pretty much as Claro does but with just a tad more polish. I'm a little curious whether Gin could ever replace Claro in core.&nbsp;<\/p><p><a href=\"https:\/\/www.drupal.org\/project\/drupal_cms_olivero\">Drupal CMS Olivero<\/a> is basically a subtheme for the core Olivero module that provides some compatibility fixes to allow the content types and the associated fields and views to look more polished. I don't see many sites launching with Drupal CMS Olivero (or Olivero for that matter). My blog was on it for about two months before I wanted to theme it to be something that looked a little less like Drupal CMS out of the box.<\/p><p>Last month, I wrote <a href=\"\/blog\/2025-01\/few-thoughts-about-drupal-cms-starshot-after-exploring-release-candidate\/\">a few thoughts<\/a> about how I felt the biggest things missing for Drupal CMS are the new Experience Builder capabilities and a more flexible starting theme with components for Experience Builder.<\/p><h2>More than surprises<\/h2><p>While some of these modules I had not used before were a surprise\u2014mostly pleasant\u2014I also noticed a lot of best practices in Drupal CMS that should help consolidate approaches across the Drupal developer community. I'll cover <a href=\"\/node\/140\" data-entity-type=\"node\" data-entity-uuid=\"44468209-ac0d-4498-9c4f-fb213df7ad8a\" data-entity-substitution=\"canonical\">Drupal CMS Modules We Know and Love<\/a> tomorrow.<\/p><hr><p>Do you have a project or team that needs some expert help? Do you just want to chat about Drupal CMS and what it might mean to your organization? <a href=\"https:\/\/www.linkedin.com\/in\/joshuami\">Connect with me on LinkedIn<\/a> or reach out to me on Drupal Slack (@joshuami).<\/p><p>&nbsp;<\/p>",
            "format": "content_format",
            "processed": "<p>Drupal CMS is packed with surprises. This post will cover a few of those as part of a series of posts on the new release of Drupal that is drastically changing the way we use Drupal to create websites.<\/p>\n<p>I can't remember when I started using Drupal. I know I created an account on Drupal.org in September of 2005, so I had to have at least installed it and played around a bit at that time. Fun fact that first account was <a href=\"https:\/\/www.drupal.org\/u\/mobilehippie\">mobilehippie<\/a>, all my contributions since 2009 are under the username <a href=\"https:\/\/www.drupal.org\/u\/joshuami\">joshuami<\/a>.<\/p>\n<p>Around 2007 or 2008, I launched the first website that I can say I completed using Drupal\u2014long enough to have forgotten precisely which site (maybe Hitachi?). That first site started as Drupal 5, but as Drupal 6 was released in February 2008, I'm pretty sure it launched on D6.&nbsp;<\/p>\n<p>Over the years, I installed so... many... modules.&nbsp;<\/p>\n<p>Despite having tried so many modules to meet a wide range of project needs, I occasionally get surprised on <a href=\"https:\/\/talkingdrupal.com\/\">Talking Drupal<\/a> when they cover a <a href=\"https:\/\/talkingdrupal.com\/module-of-the-week\">module of the week<\/a>. What I didn't expect was to be surprised by modules included in <a href=\"https:\/\/www.drupal.org\/project\/cms\">Drupal CMS<\/a>.<\/p>\n<p>Some of these should not have been a surprise. How did I not know about Simple Add More or Token OR?!<\/p>\n<h2>AI (and Friends)<\/h2>\n<p>I have been a little skeptical of AI needing to be in every new software release. Yes, AI has a place, but it feels gimmicky in so many applications. When I first heard that Drupal CMS would have AI, I was skeptical. When I saw the demos of AI in Drupal CMS as part of DrupalCon Barcelona, I was intrigued. Now that I see everything that is possible with the 21 modules of AI included in Drupal CMS, I'm excited. (It might be more accurate to say 5 modules with a <a href=\"https:\/\/www.drupal.org\/project\/ai\">suite of submodules<\/a>.)<\/p>\n<p>Drupal CMS ships with two AI providers, Anthropic and OpenAI, and their library of models. Configuration of an AI provider is straightforward and relatively quick to get up and running.<\/p>\n<p>With tools like the AI CKEditor Integration, editors will be able to prompt their way through content creation, which could allow writing that meets particular tone or verbosity requirements. Think of it as spelling and grammar checks combined with content generation.<\/p>\n<p>Similarly, <a href=\"https:\/\/www.drupal.org\/project\/ai_image_alt_text\">on demand image alternative text creation<\/a> could lead to more accessible content. (<a href=\"https:\/\/dri.es\/trusting-ai-with-my-images-was-not-easy\">Dries has even suggested these models can do a better job than a human in some cases<\/a>.)<\/p>\n<p>As someone that has worked on quite a few websites that needed enterprise-grade translation, AI Translate could be an interesting alternative to translation APIs that allows for on demand and bulk translation with the added capability of an AI agent to set tone per language and region as well as a more dynamic approach to translation libraries to improve translation quality.&nbsp;<\/p>\n<p>Similarly, AI Search could be an alternative to search solutions like Solr, Elastisearch, and Angolia with possible improvements to natural language search.<\/p>\n<p>The AI Chatbot demos are impressive. The idea that a site builder could prompt their way to complex content models is compelling. \"Give me a book content type with fields for ISBN and year published.\" That could save on a huge amount of typing.<\/p>\n<p>Automation could also lead to interesting new content workflows. What if you could set up a workflow that automatically reviewed content with an AI agent at the point it reached a particular moderation state? With ECA (see below) and AI, that's possible.<\/p>\n<h2>ECA (and Friends)<\/h2>\n<p><a href=\"https:\/\/www.drupal.org\/project\/eca\">ECA<\/a> stands for event condition action. It is powerful.<\/p>\n<p>One way to think of ECA is as a drop in replacement for <a href=\"https:\/\/www.drupal.org\/project\/rules\">Rules<\/a> that has a more robust visual modeler to allow you to see the rules you are creating more easily.<\/p>\n<p>While ECA had been on my list to try since DrupalCon Portland when I saw a convincing demo of its capability, seeing the example models included in Drupal CMS prodded me to create my own.<\/p>\n<p>I've since created a model to notify assigned reviewers by email when changes occur to content as well as a rule to assign group memberships (using the <a href=\"https:\/\/www.drupal.org\/project\/group\">Group module<\/a>) based on user profile data.&nbsp;<\/p>\n<div class=\"media media--type-image media--view-mode-large\">\n  \n                    \t    <picture>\n                  <source srcset=\"\/sites\/default\/files\/styles\/uncropped_500w_webp\/public\/2025-02\/notify-reviewers-eca-model.png.webp?itok=-znEPzAk 500w, \/sites\/default\/files\/styles\/uncropped_700w_webp\/public\/2025-02\/notify-reviewers-eca-model.png.webp?itok=o0Hfdox5 700w, \/sites\/default\/files\/styles\/uncropped_960w_webp\/public\/2025-02\/notify-reviewers-eca-model.png.webp?itok=K0kBjbn_ 960w\" media=\"all and (min-width: 500px)\" type=\"image\/webp\" sizes=\"100vw\" width=\"960\" height=\"350\">\n                  <img src=\"\/sites\/default\/files\/styles\/uncropped_500w_webp\/public\/2025-02\/notify-reviewers-eca-model.png.webp?itok=-znEPzAk\" alt=\"The diagram for the ECA model that starts with an updated content event and loops over each reviewer to send them a message.\" title width=\"500\" height=\"182\" loading=\"lazy\" data-component-id=\"xtra:image\" class=\"img-fluid\">\n  <\/picture>\n\n\n\n                    <div class=\"media-edit small m-1\">\n          <a href=\"\/media\/12\/edit\/edit\" target=\"_blank\">Edit<\/a>\n        <\/div>\n            <\/div>\n<p>The possibilities are endless and every model created tends to be one less module needed. No need for <a href=\"https:\/\/www.drupal.org\/project\/quick_node_clone\">Quick Node Clone<\/a> when you can just write an ECA model for it.<\/p>\n<h2>Simple Add More<\/h2>\n<p>I feel like I should have know about about <a href=\"https:\/\/www.drupal.org\/project\/sam\">Simple Add More<\/a>. It's been around three years now!<\/p>\n<p>Drupal's field system allows you to set the cardinality to restrict the number of items that can be added to a particular field. So if you have a reviewer field (entity referenced users), and you want to restrict it to no more than three reviewers, the resulting field will show three inputs. Simple Add More simplifies that form display to only show one input with an \"add more\" button and help text that explains the limit.<\/p>\n<p>The resulting form display is so much cleaner. <a href=\"https:\/\/www.drupal.org\/project\/drupal\/issues\/1156338\">This user experience improvement is close to making its way into core<\/a>, but until it does, this module is a must.<\/p>\n<h2>Easy Email, Symfony Mailer Lite, and Mail System<\/h2>\n<div class=\"align-right media media--type-image media--view-mode-small\">\n  \n                    \t    <picture>\n                  <source srcset=\"\/sites\/default\/files\/styles\/uncropped_300w_webp\/public\/2025-02\/easy-email-templates.png?itok=5MhcgbrE 1x\" media=\"all and (min-width: 500px)\" type=\"image\/png\" width=\"300\" height=\"215\">\n                  <img src=\"\/sites\/default\/files\/styles\/uncropped_300w_webp\/public\/2025-02\/easy-email-templates.png?itok=5MhcgbrE\" alt=\"You can replace the default core email templates with overrides provided by Easy Email.\" title width=\"300\" height=\"215\" loading=\"lazy\" data-component-id=\"xtra:image\" class=\"img-fluid\">\n  <\/picture>\n\n\n\n                    <div class=\"media-edit small m-1\">\n          <a href=\"\/media\/13\/edit\/edit\" target=\"_blank\">Edit<\/a>\n        <\/div>\n            <\/div>\n<p>The name <a href=\"https:\/\/www.drupal.org\/project\/easy_email\">Easy Email<\/a> is misleading. Nothing is easy about settings up email on a new Drupal site. (Though props to <a href=\"https:\/\/www.drupal.org\/u\/zengenuity\">Wayne Eaker<\/a> for his excellent documentation and demos.)&nbsp;<\/p>\n<p>To get email working on a typical site, you have configure <a href=\"https:\/\/www.drupal.org\/project\/mailsystem\">Mail System<\/a> to use a library like <a href=\"https:\/\/www.drupal.org\/project\/symfony_mailer_lite\">Symfony Mailer Lite<\/a> or <a href=\"https:\/\/www.drupal.org\/project\/smtp\">SMTP Authentication Support<\/a> to send email that gets formatted by something like Easy Email or <a href=\"https:\/\/www.drupal.org\/project\/mimemail\">Mime Mail<\/a>.<\/p>\n<p>Trust me when I say that configuring all of that is seldom \"easy\".<\/p>\n<p>That said, I think the fact that Easy Email is included in Drupal CMS is going to lead to it being a more commonly used solution. As more people use it, this flexible interface is likely to get the user experience attention that will improve configuring these complex systems.<\/p>\n<p><strong>Update<\/strong>: Wayne mentioned in Slack that the easiest way to get up and running with Easy Email on an existing site is to use the <code>easy_email_express<\/code> recipe. When applied, you'll have all the settings you need to send the email using the PHP native sendmail binary. You'll still need to adjust some PHP settings, but for testing email it is a good way to get up and running. (I could do an entire post on making sure you set up email for successful delivery, which is a bit more complex as it involves configuring your mail server with proper SPF (Sender Policy Framework) and DKIM (DomainKeys Identified Mail) settings.<\/p>\n<h2>Token OR<\/h2>\n<p><a href=\"https:\/\/www.drupal.org\/project\/token_or\">Token OR<\/a> is never going to be read correctly by a screen reader. The capitalized \"OR\" is referencing the way this simple module allows you to include alternate tokens in a this \"or\" that pattern.<\/p>\n<p>So if I wanted to have a metatag description that used a <code>field_seo_description<\/code> if it exists but otherwise falls back to <code>field_description<\/code>, it would look something like this:<\/p>\n<pre><code class=\"language-plaintext\">[node:field_seo_description|node:field_description]<\/code><\/pre><p>That little pipe (<code>|<\/code>) is standing in for \"or\" in this case.<\/p>\n<h2>Trash<\/h2>\n<p>Operating systems have long used the idea of trash cans (or recycling bins) as a way of representing data that has been removed but not yet deleted. <a href=\"https:\/\/www.drupal.org\/project\/trash\">Trash<\/a> let's editors \"throw away\" content that is no longer needed, but saves it in a state that allows it to be recovered if it was thrown away be default.<\/p>\n<h2>Simple Search Form<\/h2>\n<p><a href=\"https:\/\/www.drupal.org\/project\/simple_search_form\">Simple Search Form<\/a> is another module that I'm suprised I have not run across. Typically, I either expose the search form for a view or write a custom search form into a block. This module gives you a block with a search input and button that can point to any search view. So even if your search view has multiple filters, you search block that is part of your navigation bar can be simple and straightforward.<\/p>\n<h2>Klaro Cookie &amp; Consent Management<\/h2>\n<p><a href=\"https:\/\/www.drupal.org\/project\/klaro\">Klaro Cookie &amp; Consent Management<\/a> provides a user interface for expressing privacy preferences. Consent management is a must have for websites that fall under the <a href=\"https:\/\/gdpr-info.eu\/\">GDPR<\/a>. &nbsp;I found it interesting that this particular module has a supporting product behind it's development, <a href=\"https:\/\/klaro.org\/\">Klaro<\/a>. It's unfortunate that the name of the company is phonetically the same as the default admin theme in Drupal, Claro.&nbsp;<\/p>\n<h2>Themes: Gin and Drupal CMS Olivero<\/h2>\n<div class=\"align-right media media--type-image media--view-mode-small\">\n  \n                    \t    <picture>\n                  <source srcset=\"\/sites\/default\/files\/styles\/uncropped_300w_webp\/public\/2025-02\/screenshot-gin-admin-theme-inception.png?itok=snddIEU1 1x\" media=\"all and (min-width: 500px)\" type=\"image\/png\" width=\"300\" height=\"143\">\n                  <img src=\"\/sites\/default\/files\/styles\/uncropped_300w_webp\/public\/2025-02\/screenshot-gin-admin-theme-inception.png?itok=snddIEU1\" alt=\"Gin is clean and a bit more polished than Claro.\" title width=\"300\" height=\"143\" loading=\"lazy\" data-component-id=\"xtra:image\" class=\"img-fluid\">\n  <\/picture>\n\n\n\n                    <div class=\"media-edit small m-1\">\n          <a href=\"\/media\/14\/edit\/edit\" target=\"_blank\">Edit<\/a>\n        <\/div>\n            <\/div>\n<p>Technically, I have installed <a href=\"https:\/\/www.drupal.org\/project\/gin\">Gin<\/a> before, but until it was part of the Drupal CMS release, I never felt comfortable using it on a customer project. I'm a fan of most of the visual enhancements it adds over and above Claro, the default admin theme that is part of Drupal core. (I'm writing this with dark mode and some choice color accents. How fun!)&nbsp;<\/p>\n<p>I've run into a couple of issues with Gin and common modules like Environment Indicator, but overall, it works pretty much as Claro does but with just a tad more polish. I'm a little curious whether Gin could ever replace Claro in core.&nbsp;<\/p>\n<p><a href=\"https:\/\/www.drupal.org\/project\/drupal_cms_olivero\">Drupal CMS Olivero<\/a> is basically a subtheme for the core Olivero module that provides some compatibility fixes to allow the content types and the associated fields and views to look more polished. I don't see many sites launching with Drupal CMS Olivero (or Olivero for that matter). My blog was on it for about two months before I wanted to theme it to be something that looked a little less like Drupal CMS out of the box.<\/p>\n<p>Last month, I wrote <a href=\"\/blog\/2025-01\/few-thoughts-about-drupal-cms-starshot-after-exploring-release-candidate\/\">a few thoughts<\/a> about how I felt the biggest things missing for Drupal CMS are the new Experience Builder capabilities and a more flexible starting theme with components for Experience Builder.<\/p>\n<h2>More than surprises<\/h2>\n<p>While some of these modules I had not used before were a surprise\u2014mostly pleasant\u2014I also noticed a lot of best practices in Drupal CMS that should help consolidate approaches across the Drupal developer community. I'll cover <a href=\"\/blog\/2025-02\/drupal-cms-modules-we-know-and-love\" data-entity-type=\"node\" data-entity-uuid=\"44468209-ac0d-4498-9c4f-fb213df7ad8a\" data-entity-substitution=\"canonical\">Drupal CMS Modules We Know and Love<\/a> tomorrow.<\/p>\n<hr>\n<p>Do you have a project or team that needs some expert help? Do you just want to chat about Drupal CMS and what it might mean to your organization? <a href=\"https:\/\/www.linkedin.com\/in\/joshuami\">Connect with me on LinkedIn<\/a> or reach out to me on Drupal Slack (@joshuami).<\/p>\n<p>&nbsp;<\/p>\n",
            "summary": ""
        }
    ],
    "feeds_item": [],
    "field_description": [
        {
            "value": "Drupal CMS is packed with surprises. This post will cover a few of those as part of a series of posts on the new release of Drupal that is drastically changing the way we use Drupal to create websites."
        }
    ],
    "field_featured_image": [],
    "field_seo_description": [],
    "field_seo_image": [],
    "field_seo_title": [],
    "field_tags": [
        {
            "target_type": "taxonomy_term",
            "target_uuid": "953d2094-d408-40ba-ace8-62e8da23eb27"
        },
        {
            "target_type": "taxonomy_term",
            "target_uuid": "0b6a4e4b-ba4a-4617-a5bc-f8628b08db01"
        },
        {
            "target_type": "taxonomy_term",
            "target_uuid": "26a282e7-a94d-4781-aa8e-e1b72b99bae8"
        }
    ]
}